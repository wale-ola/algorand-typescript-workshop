{
  "version": 3,
  "sources": [
    "/workspaces/algorand-typescript-workshop/projects/personal-bank/smart_contracts/personal_bank/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;AAEA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AAKG;;AAAA;AAAA;AAAA;;AAAA;AALH;;;AAAA;;;AAKG;;;AAAA;;AALH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAKE;;;AAE4B;AAGP;;AAAnB;;AAH0B;AAMd;AAAZ;;AAAA;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1"
    },
    "5": {
      "op": "bytecblock \"github\""
    },
    "14": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "16": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "19": {
      "op": "pushbytes 0x1f9cca3d // method \"deposit(string)void\"",
      "defined_out": [
        "Method(deposit(string)void)"
      ],
      "stack_out": [
        "Method(deposit(string)void)"
      ]
    },
    "25": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(deposit(string)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(deposit(string)void)",
        "tmp%2#0"
      ]
    },
    "28": {
      "op": "match main_deposit_route@3",
      "stack_out": []
    },
    "32": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "33": {
      "op": "return",
      "stack_out": []
    },
    "34": {
      "block": "main_deposit_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "36": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "37": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "38": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "40": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "41": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "44": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "47": {
      "callsub": "smart_contracts/personal_bank/contract.algo.ts::PersonalBank.deposit",
      "op": "callsub deposit",
      "stack_out": []
    },
    "50": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "51": {
      "op": "return",
      "stack_out": []
    },
    "52": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "54": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "57": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "59": {
      "op": "!",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "60": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "61": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "62": {
      "op": "return",
      "stack_out": []
    },
    "63": {
      "subroutine": "smart_contracts/personal_bank/contract.algo.ts::PersonalBank.deposit",
      "params": {
        "githubHandle#0": "bytes"
      },
      "block": "deposit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "66": {
      "op": "bytec_0 // \"github\"",
      "defined_out": [
        "\"github\""
      ],
      "stack_out": [
        "\"github\""
      ]
    },
    "67": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "\"github\"",
        "32"
      ],
      "stack_out": [
        "\"github\"",
        "32"
      ]
    },
    "69": {
      "op": "box_create",
      "defined_out": [
        "{box_create}"
      ],
      "stack_out": [
        "{box_create}"
      ]
    },
    "70": {
      "op": "pop",
      "stack_out": []
    },
    "71": {
      "op": "bytec_0 // \"github\"",
      "stack_out": [
        "\"github\""
      ]
    },
    "72": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"github\"",
        "0"
      ],
      "stack_out": [
        "\"github\"",
        "0"
      ]
    },
    "73": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"github\"",
        "0",
        "githubHandle#0 (copy)"
      ],
      "stack_out": [
        "\"github\"",
        "0",
        "githubHandle#0 (copy)"
      ]
    },
    "75": {
      "op": "box_replace",
      "stack_out": []
    },
    "76": {
      "retsub": true,
      "op": "retsub"
    }
  }
}